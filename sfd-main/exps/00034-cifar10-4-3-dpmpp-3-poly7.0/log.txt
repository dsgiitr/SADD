Model already exists: ../sfd-main/src/cifar10/edm-cifar10-32x32-uncond-vp.pkl
Loading the pre-trained diffusion model from "../sfd-main/src/cifar10/edm-cifar10-32x32-uncond-vp.pkl"...
cherish
4
/home/zeus/miniconda3/envs/cloudspace/lib/python3.9/site-packages/torch/distributed/distributed_c10d.py:4631: UserWarning: No device id is provided via `init_process_group` or `barrier `. Using the current device set by the user. 
  warnings.warn(  # warn only once
Total parameters in U-Net:      60417164
Setting up optimizer...
Training for 200 kimg...

[rank0]: Traceback (most recent call last):
[rank0]:   File "/teamspace/studios/this_studio/sfd-main/train.py", line 155, in <module>
[rank0]:     main()
[rank0]:   File "/home/zeus/miniconda3/envs/cloudspace/lib/python3.9/site-packages/click/core.py", line 1161, in __call__
[rank0]:     return self.main(*args, **kwargs)
[rank0]:   File "/home/zeus/miniconda3/envs/cloudspace/lib/python3.9/site-packages/click/core.py", line 1082, in main
[rank0]:     rv = self.invoke(ctx)
[rank0]:   File "/home/zeus/miniconda3/envs/cloudspace/lib/python3.9/site-packages/click/core.py", line 1443, in invoke
[rank0]:     return ctx.invoke(self.callback, **ctx.params)
[rank0]:   File "/home/zeus/miniconda3/envs/cloudspace/lib/python3.9/site-packages/click/core.py", line 788, in invoke
[rank0]:     return __callback(*args, **kwargs)
[rank0]:   File "/teamspace/studios/this_studio/sfd-main/train.py", line 150, in main
[rank0]:     training_loop.training_loop(**c)
[rank0]:   File "/teamspace/studios/this_studio/sfd-main/training/training_loop.py", line 275, in training_loop
[rank0]:     teacher_traj = [loss_fn.get_teacher_traj(net=net_copy, tensor_in=latents[k], labels=labels[k]) for k in range(num_acc_rounds)]
[rank0]:   File "/teamspace/studios/this_studio/sfd-main/training/training_loop.py", line 275, in <listcomp>
[rank0]:     teacher_traj = [loss_fn.get_teacher_traj(net=net_copy, tensor_in=latents[k], labels=labels[k]) for k in range(num_acc_rounds)]
[rank0]:   File "/teamspace/studios/this_studio/sfd-main/training/loss.py", line 142, in get_teacher_traj
[rank0]:     teacher_traj = self.solver_tea(
[rank0]:   File "/teamspace/studios/this_studio/sfd-main/solvers.py", line 575, in dpm_pp_sampler
[rank0]:     d_cur = (x_cur - denoised) / t_cur
[rank0]: RuntimeError: The size of tensor a (3) must match the size of tensor b (12) at non-singleton dimension 1
