Model already exists: ../sfd-main/src/cifar10/edm-cifar10-32x32-uncond-vp.pkl
Loading the pre-trained diffusion model from "../sfd-main/src/cifar10/edm-cifar10-32x32-uncond-vp.pkl"...
/home/zeus/miniconda3/envs/cloudspace/lib/python3.9/site-packages/torch/distributed/distributed_c10d.py:4631: UserWarning: No device id is provided via `init_process_group` or `barrier `. Using the current device set by the user. 
  warnings.warn(  # warn only once
Total parameters in U-Net:      60396419
Setting up optimizer...
Training for 200 kimg...

[rank0]: Traceback (most recent call last):
[rank0]:   File "/teamspace/studios/this_studio/sfd-main/train.py", line 155, in <module>
[rank0]:     main()
[rank0]:   File "/home/zeus/miniconda3/envs/cloudspace/lib/python3.9/site-packages/click/core.py", line 1161, in __call__
[rank0]:     return self.main(*args, **kwargs)
[rank0]:   File "/home/zeus/miniconda3/envs/cloudspace/lib/python3.9/site-packages/click/core.py", line 1082, in main
[rank0]:     rv = self.invoke(ctx)
[rank0]:   File "/home/zeus/miniconda3/envs/cloudspace/lib/python3.9/site-packages/click/core.py", line 1443, in invoke
[rank0]:     return ctx.invoke(self.callback, **ctx.params)
[rank0]:   File "/home/zeus/miniconda3/envs/cloudspace/lib/python3.9/site-packages/click/core.py", line 788, in invoke
[rank0]:     return __callback(*args, **kwargs)
[rank0]:   File "/teamspace/studios/this_studio/sfd-main/train.py", line 150, in main
[rank0]:     training_loop.training_loop(**c)
[rank0]:   File "/teamspace/studios/this_studio/sfd-main/training/training_loop.py", line 268, in training_loop
[rank0]:     teacher_traj = [loss_fn.get_teacher_traj(net=net_copy, tensor_in=latents[k], labels=labels[k]) for k in range(num_acc_rounds)]
[rank0]:   File "/teamspace/studios/this_studio/sfd-main/training/training_loop.py", line 268, in <listcomp>
[rank0]:     teacher_traj = [loss_fn.get_teacher_traj(net=net_copy, tensor_in=latents[k], labels=labels[k]) for k in range(num_acc_rounds)]
[rank0]:   File "/teamspace/studios/this_studio/sfd-main/training/loss.py", line 106, in get_teacher_traj
[rank0]:     self.t_steps = get_schedule(self.num_steps_teacher, self.sigma_min, self.sigma_max, schedule_type=self.schedule_type, schedule_rho=self.schedule_rho, device=tensor_in.device, net=net)
[rank0]:   File "/teamspace/studios/this_studio/sfd-main/solver_utils.py", line 26, in get_schedule
[rank0]:     step_indices = torch.arange(num_steps, device=device)
[rank0]: TypeError: arange() received an invalid combination of arguments - got (NoneType, device=torch.device), but expected one of:
[rank0]:  * (Number end, *, Tensor out = None, torch.dtype dtype = None, torch.layout layout = None, torch.device device = None, bool pin_memory = False, bool requires_grad = False)
[rank0]:  * (Number start, Number end, *, torch.dtype dtype = None, torch.layout layout = None, torch.device device = None, bool pin_memory = False, bool requires_grad = False)
[rank0]:  * (Number start, Number end, Number step = 1, *, Tensor out = None, torch.dtype dtype = None, torch.layout layout = None, torch.device device = None, bool pin_memory = False, bool requires_grad = False)

